#!/usr/bin/env bash

# User settings
# =============

# aider
declare -r HOME=/home/ubuntu
declare PUID=1001
declare PGID=1001
# aider-geoip
declare -r GEOIP_DIR=${HOME}/geoip
# aider-discord
declare -r DISCORD_WEBHOOK="https://discord.com/api/webhooks/..."
# aider-init
declare -r INIT_CRON_JOBS="
@reboot ${HOME}/bin/aider/aider init startup
#5 4 * * 4 ${HOME}/bin/aider/aider geoip update
#52 8 */3 * * ${HOME}/bin/aider/aider rclone backup general
"
declare -r INIT_TOTAL_FOLDERS=100000
declare -r INIT_STARTUP="
${HOME}/bin/aider/aider init max-watches
${HOME}/bin/aider/aider init crontab
"
# aider-log
declare -r LOG_DIR="${HOME}/logs"
declare -r LOG_FILE="${LOG_DIR}/${NAME%.*}.log"
declare -ru LOG_LEVEL="debug"
# aider-plex
declare -r PLEX_MEDIA_SERVER_APPLICATION_SUPPORT_DIR=/volume1/PlexMediaServer/AppData
declare -r PLEX_URL="https://plex:32400"
declare -r PLEX_TOKEN=""
declare -r PLEX_LAUNCHER=/var/packages/PlexMediaServer/scripts/start-stop-status
declare -r PLEX_DB_FILE="com.plexapp.plugins.library.db"
declare -r PLEX_RAM_LINK_BACKUP_PAIRS=(
    "/dev/shm/plex/Databases|${HOME}/backup/plex|/plex/config/Library/Application Support/Plex Media Server/Plug-in Support/Databases"
    "/dev/shm/plex-music/Databases|${HOME}/backup/plex-music|/plex-music/config/Library/Application Support/Plex Media Server/Plug-in Support/Databases"
)
# aider-rclone
declare -r RCLONE=/usr/bin/rclone
declare -r RCLONE_CONFIG=${HOME}/.config/rclone/rclone.conf
declare -r RCLONE_LOG_FILE=${LOG_DIR}/rclone/rclone-${NAME%.*}.log
declare -ru RCLONE_LOG_LEVEL=INFO
declare -r RCLONE_CACHE_DIR=/var/cache/rclone
declare -r RCLONE_TIME_OUT=12h
# remote control
declare -r RCLONE_RC_ADDR=":5572"
declare -r RCLONE_RC_USER="USER"
declare -r RCLONE_RC_PASS="PASSWORD"
declare -r RCLONE_RC_HTPASSWD="${HOME}/.config/.htpasswd"
# filter
declare -r RCLONE_FILTER_DAEMON="${HOME}/.config/rclone/rclone.filter.txt"
# mount
declare -r RCLONE_MOUNTS="remote_A:/mnt/remote_A
remote_B:/mnt/remote_B
remote_C:/mnt/remote_C"
declare -r RCLONE_RESTART_CONTAINERS="plex
kavita
"
# backup
declare -r RCLONE_BACKUP_LIST_FILE_PREFIX="rclone-backup-"
declare -r RCLONE_BACKUP_LIST_FILE_EXT="txt"
declare -r RCLONE_BACKUP_LIST_DIR="${HOME}"/.config/rclone
declare -r RCLONE_BACKUP_TEMP_DIR=/tmp/backup
declare -r RCLONE_BACKUP_ROTATION_REMOTE=5
declare -r RCLONE_BACKUP_ARCHIVE_FILE_PREFIX="${RCLONE_BACKUP_LIST_FILE_PREFIX}"
declare -r RCLONE_BACKUP_FLAGS="--create-empty-src-dirs
--ignore-case
--ignore-checksum
--ignore-size"
declare -r RCLONE_BACKUP_PRE_SCRIPT_GENERAL="ls /home"
declare -r RCLONE_BACKUP_POST_SCRIPT_GENERAL="ls /home"
# aider-tailog
declare -r TAILOG_TRAEFIK_LOGS=(${LOG_DIR}/traefik/*.log)
declare -r TAILOG_NGINX_LOGS=(${LOG_DIR}/nginx/*.log)
declare -r TAILOG_FAIL2BAN_LOGS=(${LOG_DIR}/fail2ban/*.log)
declare -r TAILOG_AUTHELIA_LOGS=(${LOG_DIR}/authelia/*.log)
declare -r TAILOG_PLEX_LOGS=(
    "${PLEX_MEDIA_SERVER_APPLICATION_SUPPORT_DIR}/Plex Media Server/Logs/Plex Media Server.log"
    "${PLEX_MEDIA_SERVER_APPLICATION_SUPPORT_DIR}/Plex Media Server/Logs/Plex Media Scanner.log"
    "${PLEX_MEDIA_SERVER_APPLICATION_SUPPORT_DIR}/Plex Media Server/Logs/PMS Plugin Logs/com.plexapp.agents.sjva_agent.log"
)
declare -r TAILOG_FLASKFARM_LOGS=(
    /volume1/docker/flaskfarm/data/log/!(all).log
)
declare -r TAILOG_RCLONE_LOGS=(${LOG_DIR}/rclone/*.log)
declare -r TAILOG_SQUID_LOGS=(${LOG_DIR}/squid/*.log)
declare -r TAILOG_TELDRIVE_LOGS=(${LOG_DIR}/teldrive/*.log)
declare -r TAILOG_AIDER_LOGS=(${LOG_FILE})
declare -r TAILOG_KAVITA_LOGS=(${LOG_DIR}/kavita/*.log)
# aider-dsm
declare -r DSM_CERT_TRAEFIK_DIR=/volume1/docker/volumes/traefik/config/acme
declare -r DSM_CERT_TRAEFIK_ACME=${DSM_CERT_TRAEFIK_DIR}/acme.json
declare -r DSM_CERT_USER_DIR=${DSM_CERT_TRAEFIK_DIR} # PEM 형식의 인증서가 있는 경로

# Detailed settings
# =================

# aider-rclone
declare -r RCLONE_FLAGS_DEFAULT="--config=${RCLONE_CONFIG}
--log-level=${RCLONE_LOG_LEVEL}
--log-file=${RCLONE_LOG_FILE}
--cache-dir=${RCLONE_CACHE_DIR}"
declare -r RCLONE_FLAGS_RC="--url=${RCLONE_RC_ADDR}
--user=${RCLONE_RC_USER}
--pass=${RCLONE_RC_PASS}
--timeout=${RCLONE_TIME_OUT}"
declare -r RCLONE_FLAGS_RCD="rcd
--rc-addr=${RCLONE_RC_ADDR}
--rc-htpasswd=${RCLONE_RC_HTPASSWD}
--rc-enable-metrics
--rc-server-read-timeout=0
--rc-server-write-timeout=0
--rc-serve
--rc-web-gui
--rc-web-gui-update
--rc-web-gui-no-open-browser
--use-mmap
--filter-from=${RCLONE_FILTER_DAEMON}
--ignore-case"
declare -r RCLONE_FLAGS_BACKUP="--create-empty-src-dirs
--ignore-case
--ignore-checksum
--ignore-size"

# unit: nanosecond, bit
SAMPLE_MOUNTOPT='
{
    "AllowNonEmpty": false,
    "AllowOther": false,
    "AllowRoot": false,
    "AsyncRead": true,
    "AttrTimeout": 1000000000,
    "CaseInsensitive": null,
    "Daemon": false,
    "DaemonTimeout": 0,
    "DaemonWait": 60000000000,
    "DebugFUSE": false,
    "DefaultPermissions": false,
    "DeviceName": "",
    "ExtraFlags": [],
    "ExtraOptions": [],
    "MaxReadAhead": 131072,
    "NetworkMode": false,
    "NoAppleDouble": true,
    "NoAppleXattr": false,
    "VolumeName": "",
    "WritebackCache": false
}
'
SAMPLE_VFSOPT='
{
    "BlockNormDupes": false,
    "CacheMaxAge": 3600000000000,
    "CacheMaxSize": -1,
    "CacheMinFreeSpace": -1,
    "CacheMode": 0,
    "CachePollInterval": 60000000000,
    "CaseInsensitive": false,
    "ChunkSize": 134217728,
    "ChunkSizeLimit": -1,
    "ChunkStreams": 0,
    "DirCacheTime": 300000000000,
    "DirPerms": 511,
    "DiskSpaceTotalSize": -1,
    "FastFingerprint": false,
    "FilePerms": 438,
    "GID": 0,
    "NoChecksum": false,
    "NoModTime": false,
    "NoSeek": false,
    "PollInterval": 60000000000,
    "ReadAhead": 0,
    "ReadOnly": false,
    "ReadWait": 20000000,
    "Refresh": false,
    "UID": 0,
    "Umask": 18,
    "UsedIsSize": false,
    "WriteBack": 5000000000,
    "WriteWait": 1000000000
}
'
#   50 GiB = 53687091200 bytes
#   25 GiB = 26843545600 bytes
#   10 GiB = 10737418240 bytes
#    5 GiB =  5368709120 bytes
#    2 GiB =  2147483648 bytes
#    1 GiB =  1073741824 bytes
#  900 MiB =   943718400 bytes
#  750 MiB =   786432000 bytes
#  500 MiB =   524288000 bytes
#  256 MiB =   268435456 bytes
#  128 MiB =   134217728 bytes
#   64 MiB =    67108864 bytes
#   32 MiB =    33554432 bytes
#   16 MiB =    16777216 bytes
#    8 MiB =     8388608 bytes
#    4 MiB =     4194304 bytes
#    2 MiB =     2097152 bytes
#    1 MiB =     1048576 bytes
# 60 days = 5184000000000000 ns
# 30 days = 2592000000000000 ns
# 15 days = 1296000000000000 ns
#  7 days =  604800000000000 ns
#   1 day =   86400000000000 ns
#  1 hour =    3600000000000 ns
#    10 m =     600000000000 ns
#     5 m =     300000000000 ns
#    60 s =      60000000000 ns
declare -r RCLONE_RC_MOUNT_FLAGS_MOUNTOPT='{"AllowOther":true,"AllowNonEmpty":true}'
declare -r RCLONE_RC_MOUNT_FLAGS_VFSOPT='{"CacheMaxSize":5368709120,"CacheMode":3,"DirCacheTime":60000000000}'
declare -r RCLONE_RC_MOUNT_FLAGS_VFSOPT_GDS='{"ChunkSize":1048576,"ChunkSizeLimit":-1,"CacheMaxSize":10737418240,"CacheMode":3,"CachePollInterval":300000000001,"DirCacheTime":3600000000001,"PollInterval":0,"NoModTime":true,"NoChecksum":true,"NoSeek":true}'
declare -r RCLONE_RC_MOUNT_FLAGS_VFSOPT_KAVITA='{"ChunkSize":1048576,"ChunkSizeLimit":-1,"CacheMaxSize":5368709120,"CacheMode":3,"CachePollInterval":300000000000,"DirCacheTime":5184000000000000,"PollInterval":0,"NoModTime":true,"NoChecksum":true,"NoSeek":true}'

# aider-tailog
declare -r BLACK=$'\033[30m'
declare -r RED=$'\033[31m'
declare -r GREEN=$'\033[32m'
declare -r YELLOW=$'\033[33m'
declare -r BLUE=$'\033[34m'
declare -r MAGENTA=$'\033[35m'
declare -r CYAN=$'\033[36m'
declare -r GRAY=$'\033[37m'
declare -r LIGHTGRAY=$'\033[90m'
declare -r LIGHTRED=$'\033[91m'
declare -r LIGHTGREEN=$'\033[92m'
declare -r LIGHTYELLOW=$'\033[93m'
declare -r LIGHTBLUE=$'\033[94m'
declare -r LIGHTMAGENTA=$'\033[95m'
declare -r LIGHTCYAN=$'\033[96m'
declare -r WHITE=$'\033[97m'
declare -r ENDCOLOR=$'\033[0m'
declare -r TAILOG_LINES=100
declare -r TAILOG_TRAEFIK_RES=(
    "-e s/(\\\u0026|%3F)/\&/g"
    "-e s/%3D/=/g"
    "-e s/%2F/\//g"
    "-e s/\"DownstreamStatus\":([0-9]*),/\"DownstreamStatus\":${YELLOW}\1${ENDCOLOR},/"
    "-e s/\"OriginStatus\":([0-9]*),/\"OriginStatus\":${YELLOW}\1${ENDCOLOR},/"
    "-e s/\"ClientAddr\":\"([^\"]*)/\"ClientAddr\":\"${YELLOW}\1${ENDCOLOR}/"
    "-e s/\"RequestAddr\":\"([^\"]*)/\"RequestAddr\":\"${YELLOW}\1${ENDCOLOR}/"
    "-e s/\"ServiceName\":\"([^\"]*)/\"ServiceName\":\"${YELLOW}\1${ENDCOLOR}/"
    "-e s/\"RequestMethod\":\"([^\"]*)/\"RequestMethod\":\"${YELLOW}\1${ENDCOLOR}/"
    "-e s/\"RequestScheme\":\"([^\"]*)/\"RequestScheme\":\"${YELLOW}\1${ENDCOLOR}/"
    "-e s/(playbackTime=[0-9]+)/${YELLOW}\1${ENDCOLOR}/"
    "-e s/(state=[^\&]*)/${YELLOW}\1${ENDCOLOR}/"
    "-e s/(time=[0-9]+)/${YELLOW}\1${ENDCOLOR}/"
    "-e s/X-Plex-Client-Identifier=([^\&]+)/X-Plex-Client-Identifier=${YELLOW}\1${ENDCOLOR}/"
    "-e s/X-Plex-Token=([^\&\"]+)/X-Plex-Token=${YELLOW}REDACTED${ENDCOLOR}/g"
    "-e s/level=debug/level=${LIGHTGRAY}debug${ENDCOLOR}/"
    "-e s/level=error/level=${RED}error${ENDCOLOR}/"
)
declare -r TAILOG_NGINX_RES=(
    "-e s/ ([0-9]{3}) ([0-9]+) / ${YELLOW}\1${ENDCOLOR} \2 /"
    "-e s/\[debug\]/\[${LIGHTGRAY}debug${ENDCOLOR}\]/"
    "-e s/\[error\]/\[${RED}error${ENDCOLOR}\]/"
)
declare -r TAILOG_FAIL2BAN_RES=(
    "-e s/ INFO  / ${GRAY}INFO${ENDCOLOR}  /"
    "-e s/ ERROR  / ${LIGHTGRAY}ERROR${ENDCOLOR}  /"
)
declare -r TAILOG_PLEX_RES=(
    "-e s/] DEBUG - /] ${LIGHTGRAY}DEBUG${ENDCOLOR} - /"
    "-e s/] ERROR - /] ${RED}ERROR${ENDCOLOR} - /"
    "-e s/] WARN - /] ${LIGHTYELLOW}WARN${ENDCOLOR} - /"
    "-e s/authenticated user ([0-9]+) as (.*)/authenticated user ${YELLOW}\1${ENDCOLOR} as ${YELLOW}\2${ENDCOLOR}/"
    "-e s/(account |for user )([0-9]*)/\1${YELLOW}\2${ENDCOLOR}/"
    "-e s/User is (.*) \(ID: ([0-9]+)\)/User is ${YELLOW}\1${ENDCOLOR} (ID: ${YELLOW}\2${ENDCOLOR})/"
    "-e s/Signed-in Token \(([^ ]+)\)/Signed-in Token (${YELLOW}\1${ENDCOLOR})/"
    "-e s/X-Forwarded-For: (.*) as remote address/X-Forwarded-For: ${YELLOW}\1${ENDCOLOR} as remote address/"
    "-e s/Client \[(.*)\]/Client \[${YELLOW}\1${ENDCOLOR}\]/"
    "-e s/Statistics: \((.*)\) Reporting/Statistics: (${YELLOW}\1${ENDCOLOR}) Reporting/"
    "-e s/(playbackTime=[0-9]+)/${YELLOW}\1${ENDCOLOR}/"
    "-e s/(state=[a-z]?+)/${YELLOW}\1${ENDCOLOR}/"
    "-e s/(time=[0-9]+)/${YELLOW}\1${ENDCOLOR}/"
)
declare -r TAILOG_FLASKFARM_RES=(
    "-e s#^(\[.+)(DEBUG|debug)(.+:[0-9]+\])\s?(.+)\$#\1${LIGHTGRAY}\2${ENDCOLOR}\3 ${LIGHTGRAY}\4${ENDCOLOR}#M"
    "-e s#^(\[.+)(INFO|info)(.+:[0-9]+\])\s?(.+)\$#\1${GREEN}\2${ENDCOLOR}\3 ${GREEN}\4${ENDCOLOR}#M"
    "-e s#^(\[.+)(WARNING|warning)(.+:[0-9]+\])\s?(.+)\$#\1${YELLOW}\2${ENDCOLOR}\3 ${YELLOW}\4${ENDCOLOR}#M"
    "-e s#^(\[.+)(ERROR|error)(.+:[0-9]+\])\s?(.+)\$#\1${RED}\2${ENDCOLOR}\3 ${RED}\4${ENDCOLOR}#M"
    "-e s#^(\[.+:\s)DEBUG(/\w+\])\s(.+)\$#\1${LIGHTGRAY}DEBUG${ENDCOLOR}\2 ${LIGHTGRAY}\3${ENDCOLOR}#M"
    "-e s#^(\[.+:\s)ERROR(/\w+\])\s(.+)\$#\1${RED}ERROR${ENDCOLOR}\2 ${RED}\3${ENDCOLOR}#M"
    "-e s#^(\[.+:\s)INFO(/\w+\])\s(.+)\$#\1${GRAY}INFO${ENDCOLOR}\2 ${GRAY}\3${ENDCOLOR}#M"
    "-e s#^(\[.+:\s)WARNING(/\w+\])\s(.+)\$#\1${YELLOW}WARNING${ENDCOLOR}\2 ${YELLOW}\3${ENDCOLOR}#M"
    "-e s#^(\[.+[0-9]+\]\s)(DEBUG\s+)(.+)\$#\1${LIGHTGRAY}\2${ENDCOLOR}${LIGHTGRAY}\3${ENDCOLOR}#M"
    "-e s#^(\[.+[0-9]+\]\s)(INFO\s+)(.+)\$#\1${GREEN}\2${ENDCOLOR}${GREEN}\3${ENDCOLOR}#M"
    "-e s#^(\[.+[0-9]+\]\s)(WARNING\s+)(.+)\$#\1${YELLOW}\2${ENDCOLOR}${YELLOW}\3${ENDCOLOR}#M"
    "-e s#^(\[.+[0-9]+\]\s)(ERROR\s+)(.+)\$#\1${RED}\2${ENDCOLOR}${RED}\3${ENDCOLOR}#M"
    "-e s#^(\[.+[0-9]+\]\s)([0-9]{1,3}\.[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3})\s([a-zA-Z]+)\s([0-9]+)\s(.+)#\1${YELLOW}\2${ENDCOLOR} \3 ${YELLOW}\4${ENDCOLOR} ${LIGHTGRAY}\5${ENDCOLOR}#M"
)
declare -r TAILOG_RCLONE_RES=(
    "-e s/ INFO  / ${GRAY}INFO${ENDCOLOR}  /"
    "-e s/ ERROR  / ${LIGHTGRAY}ERROR${ENDCOLOR}  /"
)
declare -r TAILOG_TELDRIVE_RES=(
    "-e s/\"level\":\"(DEBUG|debug)/\"level\":\"${LIGHTGRAY}\1${ENDCOLOR}/"
    "-e s/\"level\":\"(INFO|info)/\"level\":\"${GREEN}\1${ENDCOLOR}/"
    "-e s/\"level\":\"(WARNING|warning)/\"level\":\"${YELLOW}\1${ENDCOLOR}/"
    "-e s/\"level\":\"(ERROR|error)/\"level\":\"${RED}\1${ENDCOLOR}/"
    "-e s/\"ip\":\"([^\"]*)/\"ip\":\"${YELLOW}\1${ENDCOLOR}/"
    "-e s/\"msg\":\"([^\"]*)/\"msg\":\"${YELLOW}\1${ENDCOLOR}/"
    "-e s/\"method\":\"([^\"]*)/\"method\":\"${YELLOW}\1${ENDCOLOR}/"
    "-e s/\"path\":\"([^\"]*)/\"path\":\"${YELLOW}\1${ENDCOLOR}/"
    "-e s/\"status\":([^\"]*)/\"status\":${YELLOW}\1${ENDCOLOR}/"
)
declare -r TAILOG_KAVITA_RES=(
    "-e s#\s\[(Debug)\]\s(.+)# [${LIGHTGRAY}\1${ENDCOLOR}] ${LIGHTGRAY}\2${ENDCOLOR}#;"
    "-e s#\s\[(Information)\]\s(.+)# [${GREEN}\1${ENDCOLOR}] ${GREEN}\2${ENDCOLOR}#;"
    "-e s#\s\[(Trace)\]\s(.+)# [${LIGHTGRAY}\1${ENDCOLOR}] ${LIGHTGRAY}\2${ENDCOLOR}#;"
    "-e s#\s\[(Warning)\]\s(.+)# [${YELLOW}\1${ENDCOLOR}] ${YELLOW}\2${ENDCOLOR}#;"
    "-e s#\s\[(Critical)\]\s(.+)# [${RED}\1${ENDCOLOR}] ${RED}\2${ENDCOLOR}#;"
)
# preset
declare -r TAILOG_DEFAULT_LOGS=(
    "${TAILOG_TRAEFIK_LOGS[@]}"
    "${TAILOG_NGINX_LOGS[@]}"
    "${TAILOG_FAIL2BAN_LOGS[@]}"
    "${TAILOG_SQUID_LOGS[@]}"
    "${TAILOG_AUTHELIA_LOGS[@]}"
    "${TAILOG_AIDER_LOGS[@]}"
)
declare -r TAILOG_DEFAULT_RES=(
    "${TAILOG_TRAEFIK_RES[@]}"
    "${TAILOG_NGINX_RES[@]}"
    "${TAILOG_FAIL2BAN_RES[@]}"
    "${TAILOG_SQUID_RES[@]}"
    "${TAILOG_AUTHELIA_RES[@]}"
    "${TAILOG_AIDER_RES[@]}"
)
declare -r TAILOG_ALL_LOGS=(
    "${TAILOG_DEFAULT_LOGS[@]}"
    "${TAILOG_PLEX_LOGS[@]}"
    "${TAILOG_FLASKFARM_LOGS[@]}"
    "${TAILOG_RCLONE_LOGS[@]}"
    "${TAILOG_TELDRIVE_LOGS[@]}"
    "${TAILOG_PLEXMUSIC_LOGS[@]}"
    "${TAILOG_KAVITA_LOGS[@]}"
)
declare -r TAILOG_ALL_RES=(
    "${TAILOG_PLEX_RES[@]}"
    "${TAILOG_DEFAULT_RES[@]}"
    "${TAILOG_FLASKFARM_RES[@]}"
    "${TAILOG_RCLONE_RES[@]}"
    "${TAILOG_TELDRIVE_RES[@]}"
    "${TAILOG_PLEXMUSIC_RES[@]}"
    "${TAILOG_KAVITA_RES[@]}"
)

# aider-dsm
declare -r DSM_PUID=${PUID}
declare -r DSM_PGID=${PGID}
declare -r DSM_DOCKER_IPTABLES_MAX_ATTEMPTS=10
declare -r DSM_DOCKER_IPTABLES_DELAY=15
declare -r DSM_DOCKER_IPTABLES_RULE0="-A DOCKER -i docker0 -j RETURN"
declare -r DSM_DOCKER_IPTABLES_RULE1="-A PREROUTING -m addrtype --dst-type LOCAL -j DOCKER"
declare -r DSM_DOCKER_IPTABLES_RULE2="-A FORWARD -j DOCKER-USER"
declare -r DSM_DOCKER_IPTABLES_RULE3="-A FORWARD -j DOCKER-ISOLATION-STAGE-1"
declare -r DSM_CERT_DIR=/usr/syno/etc/certificate
declare -r DSM_CERT_ARCHIVE=${DSM_CERT_DIR}/_archive
declare -r DSM_CERT_INFO=${DSM_CERT_DIR}/_archive/INFO
declare -r DSM_CERT_FILE_FULLCHAIN=fullchain.pem
declare -r DSM_CERT_FILE_KEY=privkey.pem
declare -r DSM_CERT_FILE_CERT=cert.pem
declare -r DSM_CERT_FILE_CHAIN=chain.pem

#!/usr/bin/env bash

## 스크립트 용 임시 로거 구현
## log [D|I|W|E|S|C] "MESSAGE"
declare -rA LOGGING_LEVEL=([D]=DEBUG [I]=INFO [W]=WARN [E]=ERROR [S]=SEVERE [C]=CRITICAL)
declare -rA LOGGING_PRIORITY=([DEBUG]=0 [INFO]=1 [WARN]=2 [ERROR]=3 [SEVERE]=4 [CRITICAL]=5)

log_get_now(){
    echo "$(TZ='Asia/Seoul' date '+%Y-%m-%dT%T%z')"
}

log_log(){
    local l=${LOGGING_LEVEL[${1}]}
    # 입력 받은 로그 레벨의 PRIORITY 순위가 지정되어 있지 않으면 return 0
    [[ ${LOGGING_PRIORITY[${l}]} ]] || return 0
    # 입력 받은 로그 레벨의 PRIORITY 순위가 기본 LOG_LEVEL의 PRIORITY 보다 낮으면 return 0
    (( ${LOGGING_PRIORITY[${l}]} < ${LOGGING_PRIORITY[${LOG_LEVEL:-INFO}]} )) && return 0
    # 표준 출력 및 파일에 로그를 기록
    #printf "[$(log_get_now)][%8s] %s\n" "${l}" "${2}" 2>&1 | tee -a ${LOG_FILE} >/dev/null
    printf "[$(log_get_now)][%8s] %s\n" "${l}" "${2}" 2>&1 | tee -a ${LOG_FILE}
}
